{
    "name": "gnag",
    "patterns": [
        {
            "include": "#markup"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.block.gnag",
                    "begin": "/\\*",
                    "end": "\\*/",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comments"
                        }
                    ]
                },
                {
                    "name": "comment.line.double-slash.gnag",
                    "begin": "(?<!:)//",
                    "end": "\n",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comments"
                        }
                    ]
                }
            ]
        },
        "common": {
            "patterns": [
                {
                    "include": "#comments"
                }
            ]
        },
        "markup": {
            "patterns": [
                {
                    "include": "#common"
                },
                {
                    "name": "constant.character.escape.content.gnag",
                    "match": "\\\\([\\\\/\\[\\]{}#*_=~`$-.]|u\\{[0-9a-zA-Z]*\\}?)"
                },
                {
                    "name": "punctuation.definition.linebreak.gnag",
                    "match": "\\\\"
                },
                {
                    "name": "punctuation.definition.nonbreaking-space.gnag",
                    "match": "~"
                },
                {
                    "name": "punctuation.definition.shy.gnag",
                    "match": "-\\?"
                },
                {
                    "name": "punctuation.definition.em-dash.gnag",
                    "match": "---"
                },
                {
                    "name": "punctuation.definition.en-dash.gnag",
                    "match": "--"
                },
                {
                    "name": "punctuation.definition.ellipsis.gnag",
                    "match": "\\.\\.\\."
                },
                {
                    "name": "constant.symbol.gnag",
                    "match": ":([a-zA-Z0-9]+:)+"
                },
                {
                    "name": "markup.bold.gnag",
                    "begin": "(^\\*|\\*$|((?<=\\W|_)\\*)|(\\*(?=\\W|_)))",
                    "end": "(^\\*|\\*$|((?<=\\W|_)\\*)|(\\*(?=\\W|_)))|\n|(?=\\])",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.bold.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#markup"
                        }
                    ]
                },
                {
                    "name": "markup.italic.gnag",
                    "begin": "(^_|_$|((?<=\\W|_)_)|(_(?=\\W|_)))",
                    "end": "(^_|_$|((?<=\\W|_)_)|(_(?=\\W|_)))|\n|(?=\\])",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.italic.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#markup"
                        }
                    ]
                },
                {
                    "name": "markup.underline.link.gnag",
                    "match": "https?://[0-9a-zA-Z~/%#&=',;\\.\\+\\?]*"
                },
                {
                    "name": "markup.raw.block.gnag",
                    "begin": "`{3,}",
                    "end": "\\0",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.raw.gnag"
                        }
                    }
                },
                {
                    "name": "markup.raw.inline.gnag",
                    "begin": "`",
                    "end": "`",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.raw.gnag"
                        }
                    }
                },
                {
                    "name": "string.other.math.gnag",
                    "begin": "\\$",
                    "end": "\\$",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.string.math.gnag"
                        }
                    }
                },
                {
                    "name": "markup.heading.gnag",
                    "contentName": "entity.name.section.gnag",
                    "begin": "^\\s*=+\\s+",
                    "end": "\n|(?=<)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.heading.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#markup"
                        }
                    ]
                },
                {
                    "name": "punctuation.definition.list.unnumbered.gnag",
                    "match": "^\\s*-\\s+"
                },
                {
                    "name": "punctuation.definition.list.numbered.gnag",
                    "match": "^\\s*([0-9]*\\.|\\+)\\s+"
                },
                {
                    "match": "^\\s*(/)\\s+([^:]*:)",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.list.description.gnag"
                        },
                        "2": {
                            "name": "markup.list.term.gnag"
                        }
                    }
                },
                {
                    "name": "entity.other.label.gnag",
                    "match": "<[[:alpha:]_][[:alnum:]_-]*>",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.label.gnag"
                        }
                    }
                },
                {
                    "name": "entity.other.reference.gnag",
                    "match": "(@)[[:alpha:]_][[:alnum:]_-]*",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.reference.gnag"
                        }
                    }
                },
                {
                    "begin": "(#)(let|set|show)\\b",
                    "end": "\n|(;)|(?=])",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.other.gnag"
                        },
                        "1": {
                            "name": "punctuation.definition.keyword.gnag"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.terminator.statement.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#code"
                        }
                    ]
                },
                {
                    "name": "keyword.other.gnag",
                    "match": "(#)(as|in)\\b",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.keyword.gnag"
                        }
                    }
                },
                {
                    "begin": "((#)if|(?<=(}|])\\s*)else)\\b",
                    "end": "\n|(?=])|(?<=}|])",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.conditional.gnag"
                        },
                        "2": {
                            "name": "punctuation.definition.keyword.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#code"
                        }
                    ]
                },
                {
                    "begin": "(#)(for|while)\\b",
                    "end": "\n|(?=])|(?<=}|])",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.loop.gnag"
                        },
                        "1": {
                            "name": "punctuation.definition.keyword.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#code"
                        }
                    ]
                },
                {
                    "name": "keyword.control.loop.gnag",
                    "match": "(#)(break|continue)\\b",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.keyword.gnag"
                        }
                    }
                },
                {
                    "begin": "(#)(import|include|export)\\b",
                    "end": "\n|(;)|(?=])",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.import.gnag"
                        },
                        "1": {
                            "name": "punctuation.definition.keyword.gnag"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.terminator.statement.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#code"
                        }
                    ]
                },
                {
                    "name": "keyword.control.flow.gnag",
                    "match": "(#)(return)\\b",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.keyword.gnag"
                        }
                    }
                },
                {
                    "comment": "Function name",
                    "name": "entity.name.function.gnag",
                    "match": "((#)[[:alpha:]_][[:alnum:]_-]*!?)(?=\\[|\\()",
                    "captures": {
                        "2": {
                            "name": "punctuation.definition.function.gnag"
                        }
                    }
                },
                {
                    "comment": "Function arguments",
                    "begin": "(?<=#[[:alpha:]_][[:alnum:]_-]*!?)\\(",
                    "end": "\\)",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.group.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#arguments"
                        }
                    ]
                },
                {
                    "name": "entity.other.interpolated.gnag",
                    "match": "(#)[[:alpha:]_][.[:alnum:]_-]*",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.gnag"
                        }
                    }
                },
                {
                    "name": "meta.block.content.gnag",
                    "begin": "#",
                    "end": "\\s",
                    "patterns": [
                        {
                            "include": "#code"
                        }
                    ]
                }
            ]
        },
        "code": {
            "patterns": [
                {
                    "include": "#common"
                },
                {
                    "name": "meta.block.code.gnag",
                    "begin": "{",
                    "end": "}",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.block.code.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#code"
                        }
                    ]
                },
                {
                    "name": "meta.block.content.gnag",
                    "begin": "\\[",
                    "end": "\\]",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.block.content.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#markup"
                        }
                    ]
                },
                {
                    "name": "comment.line.double-slash.gnag",
                    "begin": "//",
                    "end": "\n",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.gnag"
                        }
                    }
                },
                {
                    "name": "punctuation.separator.colon.gnag",
                    "match": ":"
                },
                {
                    "name": "punctuation.separator.comma.gnag",
                    "match": ","
                },
                {
                    "name": "keyword.operator.gnag",
                    "match": "=>|\\.\\."
                },
                {
                    "name": "keyword.operator.relational.gnag",
                    "match": "==|!=|<=|<|>=|>"
                },
                {
                    "name": "keyword.operator.assignment.gnag",
                    "match": "\\+=|-=|\\*=|/=|="
                },
                {
                    "name": "keyword.operator.arithmetic.gnag",
                    "match": "\\+|\\*|/|(?<![[:alpha:]_][[:alnum:]_-]*)-(?![:alnum:]_-]*[[:alpha:]_])"
                },
                {
                    "name": "keyword.operator.word.gnag",
                    "match": "\\b(and|or|not)\\b"
                },
                {
                    "name": "keyword.other.gnag",
                    "match": "\\b(let|as|in|set|show)\\b"
                },
                {
                    "name": "keyword.control.conditional.gnag",
                    "match": "\\b(if|else)\\b"
                },
                {
                    "name": "keyword.control.loop.gnag",
                    "match": "\\b(for|while|break|continue)\\b"
                },
                {
                    "name": "keyword.control.import.gnag",
                    "match": "\\b(import|include|export)\\b"
                },
                {
                    "name": "keyword.control.flow.gnag",
                    "match": "\\b(return)\\b"
                },
                {
                    "include": "#constants"
                },
                {
                    "comment": "Function name",
                    "name": "entity.name.function.gnag",
                    "match": "\\b[[:alpha:]_][[:alnum:]_-]*!?(?=\\[|\\()"
                },
                {
                    "comment": "Function name",
                    "name": "entity.name.function.gnag",
                    "match": "(?<=\\bshow\\s*)\\b[[:alpha:]_][[:alnum:]_-]*(?=\\s*[:.])"
                },
                {
                    "comment": "Function arguments",
                    "begin": "(?<=\\b[[:alpha:]_][[:alnum:]_-]*!?)\\(",
                    "end": "\\)",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.group.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#arguments"
                        }
                    ]
                },
                {
                    "name": "variable.other.gnag",
                    "match": "\\b[[:alpha:]_][[:alnum:]_-]*\\b"
                },
                {
                    "name": "meta.group.gnag",
                    "begin": "\\(",
                    "end": "\\)|(?=;)",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.group.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#code"
                        }
                    ]
                }
            ]
        },
        "constants": {
            "patterns": [
                {
                    "name": "constant.language.none.gnag",
                    "match": "\\bnone\\b"
                },
                {
                    "name": "constant.language.auto.gnag",
                    "match": "\\bauto\\b"
                },
                {
                    "name": "constant.language.boolean.gnag",
                    "match": "\\b(true|false)\\b"
                },
                {
                    "name": "constant.numeric.length.gnag",
                    "match": "\\b(\\d*)?\\.?\\d+([eE][+-]?\\d+)?(mm|pt|cm|in|em)\\b"
                },
                {
                    "name": "constant.numeric.angle.gnag",
                    "match": "\\b(\\d*)?\\.?\\d+([eE][+-]?\\d+)?(rad|deg)\\b"
                },
                {
                    "name": "constant.numeric.percentage.gnag",
                    "match": "\\b(\\d*)?\\.?\\d+([eE][+-]?\\d+)?%"
                },
                {
                    "name": "constant.numeric.fr.gnag",
                    "match": "\\b(\\d*)?\\.?\\d+([eE][+-]?\\d+)?fr"
                },
                {
                    "name": "constant.numeric.integer.gnag",
                    "match": "\\b\\d+\\b"
                },
                {
                    "name": "constant.numeric.float.gnag",
                    "match": "\\b(\\d*)?\\.?\\d+([eE][+-]?\\d+)?\\b"
                },
                {
                    "name": "string.quoted.double.gnag",
                    "begin": "\"",
                    "end": "\"",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.string.gnag"
                        }
                    },
                    "patterns": [
                        {
                            "name": "constant.character.escape.string.gnag",
                            "match": "\\\\([\\\\\"nrt]|u\\{?[0-9a-zA-Z]*\\}?)"
                        }
                    ]
                },
                {
                    "name": "string.other.math.gnag",
                    "begin": "\\$",
                    "end": "\\$",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.string.math.gnag"
                        }
                    }
                }
            ]
        },
        "arguments": {
            "patterns": [
                {
                    "name": "variable.parameter.gnag",
                    "match": "\\b[[:alpha:]_][[:alnum:]_-]*(?=:)"
                },
                {
                    "include": "#code"
                }
            ]
        }
    },
    "scopeName": "source.gnag"
}
